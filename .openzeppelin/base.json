{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x65363f1A6cb67fE045bbD2fb3c5cb81bFBEe7902",
      "txHash": "0x549187a5b912834a4beb7511d7928167130aa3afcfa852ead95da52341a172eb",
      "kind": "uups"
    }
  ],
  "impls": {
    "6aac056368034089af3a2a6c2cf0dab780d89e488e5ef3ae020cb0555081a2ec": {
      "address": "0x6330de7136f7Fb5248dD838A842DbFD44eFbEf75",
      "txHash": "0x7413de261b8c4abc0ea626cf64554c72d221ab5c4ce1bcd657adeef319e0daad",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "rewardTokens",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_contract(IERC20)4793)dyn_storage",
            "contract": "RewardTokenManager",
            "src": "contracts/RewardTokenManager.sol:16"
          },
          {
            "label": "defaultDepositSid",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ZunamiPoolControllerBaseUpgradeable",
            "src": "contracts/ZunamiPoolControllerBaseUpgredable.sol:31"
          },
          {
            "label": "defaultWithdrawSid",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "ZunamiPoolControllerBaseUpgradeable",
            "src": "contracts/ZunamiPoolControllerBaseUpgredable.sol:32"
          },
          {
            "label": "onlyIssuerMode",
            "offset": 0,
            "slot": "3",
            "type": "t_bool",
            "contract": "ZunamiPoolControllerBaseUpgradeable",
            "src": "contracts/ZunamiPoolControllerBaseUpgredable.sol:34"
          },
          {
            "label": "pool",
            "offset": 1,
            "slot": "3",
            "type": "t_contract(IPool)15441",
            "contract": "ZunamiPoolControllerBaseUpgradeable",
            "src": "contracts/ZunamiPoolControllerBaseUpgredable.sol:36"
          },
          {
            "label": "managementFeePercent",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "ZunamiPoolCompoundControllerUpgradeable",
            "src": "contracts/ZunamiPoolCompoundControllerUpgradeable.sol:26"
          },
          {
            "label": "feeTokenId",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "ZunamiPoolCompoundControllerUpgradeable",
            "src": "contracts/ZunamiPoolCompoundControllerUpgradeable.sol:28"
          },
          {
            "label": "feeDistributor",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "ZunamiPoolCompoundControllerUpgradeable",
            "src": "contracts/ZunamiPoolCompoundControllerUpgradeable.sol:29"
          },
          {
            "label": "collectedManagementFee",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "ZunamiPoolCompoundControllerUpgradeable",
            "src": "contracts/ZunamiPoolCompoundControllerUpgradeable.sol:31"
          },
          {
            "label": "rewardManager",
            "offset": 0,
            "slot": "8",
            "type": "t_contract(IRewardManager)15464",
            "contract": "ZunamiPoolCompoundControllerUpgradeable",
            "src": "contracts/ZunamiPoolCompoundControllerUpgradeable.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_contract(IERC20)4793)dyn_storage": {
            "label": "contract IERC20[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)4793": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPool)15441": {
            "label": "contract IPool",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardManager)15464": {
            "label": "contract IRewardManager",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    }
  }
}
